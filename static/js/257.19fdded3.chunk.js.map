{"version":3,"file":"static/js/257.19fdded3.chunk.js","mappings":"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","sources":["pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Wrapper = styled.section`\n  padding-top: 15px;\n  box-shadow: 0px 1px 1px 0px rgba(0, 0, 0, 0.14);\n`;\nexport const MovieCard = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: 15px;\n  padding: 10px 0 10px 10px;\n`;\n\nexport const InfoLink = styled(Link)`\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  :hover {\n    color: #ab47bc;\n  }\n`;\n\nexport const InfoItem = styled.li`\n  :not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\n\nexport const Title = styled.h2`\n  margin-bottom: 10px;\n`;\n\nexport const ImageWrapper = styled.div`\n  width: 270px;\n`;\n\nexport const ExtraInfoSection = styled.div`\n  margin-top: 10px;\n  padding: 10px;\n  box-shadow: 0px 1px 1px 0px rgba(0, 0, 0, 0.14);\n`;\n\nexport const ListItem = styled.li`\n  :not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\n\nexport const ExtraInfoTitle = styled.h3`\n  margin-bottom: 10px;\n`;\n\nexport const MovieInfo = styled.div`\n  width: 500px;\n  text-align: justify;\n`;\n\nexport const BackButton = styled.button`\n  border-radius: 6px;\n  padding: 7px 10px;\n  border: transparent;\n  outline: none;\n  margin-left: 10px;\n  font-weight: 600;\n  margin-bottom: 15px;\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  background-color: #ab47bc;\n  color: white;\n  text-decoration: none;\n  &:hover {\n    background-color: #773183;\n  }\n`;","import { useEffect, useState, Suspense } from 'react';\nimport { Outlet, useParams, useLocation, useNavigate } from 'react-router-dom';\nimport { TiChevronLeft } from 'react-icons/ti';\nimport { movieById } from 'services/api';\nimport {\n  MovieCard,\n  InfoItem,\n  InfoLink,\n  Title,\n  Wrapper,\n  ImageWrapper,\n  ExtraInfoSection,\n  ListItem,\n  ExtraInfoTitle,\n  MovieInfo,\n  BackButton,\n} from './MovieDetails.styled';\n\nconst IMAGEURL = 'https://image.tmdb.org/t/p/w500/';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n      try {\n        const movieData = await movieById(movieId);\n        setMovie(movieData);\n      } catch (e) {\n        console.log(e);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, [movieId]);\n\n  const handleGoBackButton = () => {\n    navigate(location.state.from);\n  };\n  if (!movie) {\n    return;\n  }\n  const { genres, title, release_date, overview, vote_average, poster_path } =\n    movie;\n  const imageSRC = poster_path ? IMAGEURL + poster_path : IMAGEURL ;\n  const userScore = Math.round((Number(vote_average) * 100) / 10);\n  const movieGenres = genres.map(genre => genre.name).join(' ');\n  const releaseDate = release_date.slice(0, 4);\n\n  return (\n    <>\n      <Wrapper>\n        {location.state?.from && (\n          <BackButton onClick={handleGoBackButton}>\n            <TiChevronLeft />\n            <span>Go back</span>\n          </BackButton>\n        )}\n        {isLoading ? (\n          <div>Loading...</div>\n        ) : (\n          <MovieCard>\n            <ImageWrapper>\n              <img src={`${imageSRC}`} alt={title} />\n            </ImageWrapper>\n            <MovieInfo>\n              <Title>\n                {title} {releaseDate && `(${releaseDate})`}\n              </Title>\n              <ul>\n                <InfoItem>\n                  {userScore > 0 && <p>User Score: {userScore}%</p>}\n                </InfoItem>\n                <InfoItem>\n                  <b>Overview</b>\n\n                  <p>{overview}</p>\n                </InfoItem>\n                <InfoItem>\n                  <b>Genres</b>\n\n                  <p>{movieGenres || ' - '}</p>\n                </InfoItem>\n              </ul>\n            </MovieInfo>\n          </MovieCard>\n        )}\n      </Wrapper>\n      <ExtraInfoSection>\n        <ExtraInfoTitle> Additional information</ExtraInfoTitle>\n        <div>\n          <ul>\n            <ListItem>\n              <InfoLink to=\"cast\" state={location.state}>\n                Cast\n              </InfoLink>\n            </ListItem>\n\n            <ListItem>\n              <InfoLink to=\"reviews\" state={location.state}>\n                Reviews\n              </InfoLink>\n            </ListItem>\n          </ul>\n        </div>\n      </ExtraInfoSection>\n\n      <Suspense>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;","import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst KEY = 'a6399bd390c157c90a11cb622fa14388';\n\nexport const getTrendingMovies = async() => {\n    const { data } = await axios.get(`/trending/all/day?api_key=${KEY}`)\n    return data.results;\n}\n\nexport const movieById = async movieId => {\n    const res = await axios.get(`/movie/${movieId}?api_key=${KEY}`)\nreturn res.data\n}\n\nexport const credits = async movieId => {\n    const {data} = await axios.get(`/movie/${movieId}/credits?api_key=${KEY}&language=en-US`)\nreturn data.cast\n}\n\nexport const getReviews = async movieId => {\n    const {data} = await axios.get(`/movie/${movieId}/reviews?api_key=${KEY}`)\nreturn data.results\n} \n\nexport const moviesByName = async query => {\n  const { data } = await axios.get(`/search/movie?api_key=${KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n  return data;\n};"],"names":["Wrapper","styled","MovieCard","InfoLink","Link","InfoItem","Title","ImageWrapper","ExtraInfoSection","ListItem","ExtraInfoTitle","MovieInfo","BackButton","IMAGEURL","movieId","useParams","useState","movie","setMovie","isLoading","setIsLoading","location","useLocation","navigate","useNavigate","useEffect","fetchData","movieById","movieData","console","log","genres","title","release_date","overview","vote_average","poster_path","imageSRC","userScore","Math","round","Number","movieGenres","map","genre","name","join","releaseDate","slice","state","from","onClick","src","alt","to","Suspense","axios","KEY","getTrendingMovies","data","results","res","credits","cast","getReviews","moviesByName","query"],"sourceRoot":""}