{"version":3,"file":"static/js/736.ee1af082.chunk.js","mappings":"8QAEaA,EAAWC,EAAAA,GAAAA,GAAH,2GAORC,EAAUD,EAAAA,GAAAA,QAAH,6CAIPE,EAAOF,EAAAA,GAAAA,GAAH,2F,SCRXG,EAAW,kCAkEjB,EAhEa,WACX,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAkCE,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAwBF,EAAAA,EAAAA,UAAS,MAAjC,eAAOG,EAAP,KAAaC,EAAb,KAgBE,IAdAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAS,mCAAG,2FACdJ,GAAa,GADC,mBAGSK,EAAAA,EAAAA,IAAQT,GAHjB,OAGJK,EAHI,OAIVC,EAAQD,GAJE,yEAQVD,GAAa,GARH,4EAAH,qDAWfI,GACH,GAAE,CAACR,IACCK,EAIN,OACC,UAACR,EAAD,WACGM,GACC,yCAEA,SAACL,EAAD,UACGO,EAAKK,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,GAAIC,EAAoC,EAApCA,aAAcC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,UAC7BC,EAAWH,EACbb,EAAWa,EACXb,EACJ,OACE,UAACJ,EAAD,YACE,gBAAKqB,IAAKD,EAAUE,IAAKJ,EAAMK,MAAO,IAAKC,OAAQ,OACnD,4BACE,wBACE,0BAAON,MAERC,GACC,0BACE,uCACA,gCAAQA,SAGV,0BACE,uCACA,+CAdOH,EAoBlB,OAGHN,EAAKe,SACL,+FAIP,C,8LCnEDC,EAAAA,GAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAM,mCAECC,EAAiB,mCAAG,sGACNF,EAAAA,GAAAA,IAAA,oCAAuCC,IADjC,uBACrBE,EADqB,EACrBA,KADqB,kBAEtBA,EAAKC,SAFiB,2CAAH,qDAKjBC,EAAS,mCAAG,WAAM1B,GAAN,uFACHqB,EAAAA,GAAAA,IAAA,iBAAoBrB,EAApB,oBAAuCsB,IADpC,cACfK,EADe,yBAElBA,EAAIH,MAFc,2CAAH,sDAKTf,EAAO,mCAAG,WAAMT,GAAN,yFACEqB,EAAAA,GAAAA,IAAA,iBAAoBrB,EAApB,4BAA+CsB,EAA/C,oBADF,uBACZE,EADY,EACZA,KADY,kBAEhBA,EAAKnB,MAFW,2CAAH,sDAKPuB,EAAU,mCAAG,WAAM5B,GAAN,yFACDqB,EAAAA,GAAAA,IAAA,iBAAoBrB,EAApB,4BAA+CsB,IAD9C,uBACfE,EADe,EACfA,KADe,kBAEnBA,EAAKC,SAFc,2CAAH,sDAKVI,EAAY,mCAAG,WAAMC,GAAN,yFACHT,EAAAA,GAAAA,IAAA,gCAAmCC,EAAnC,kBAAgDQ,EAAhD,+CADG,uBAClBN,EADkB,EAClBA,KADkB,kBAGnBA,GAHmB,2CAAH,qD","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ListItem = styled.li`\n  display: flex;\n  gap: 10px;\n  align-items: center;\n  justify-content: start;\n`;\n\nexport const Section = styled.section`\n  padding: 15px 10;\n`;\n\nexport const List = styled.ul`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 15px;\n`;","import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { credits } from \"services/api\";\nimport { ListItem, Section, List } from \"./Cast.styled\";\n\nconst IMAGEURL = 'https://image.tmdb.org/t/p/w500';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [isLoading, setIsLoading] = useState(false);\n  const [cast, setCast] = useState(null);\n  \n    useEffect(() => {\n        const fetchData = async() => {\n            setIsLoading(true)\n            try {\n                const cast = await credits(movieId);\n                setCast(cast)\n            }\n            catch (e) {\n            } finally {\n                setIsLoading(false)\n            }\n        }\n        fetchData()\n    }, [movieId])\n    if (!cast) {\n        return\n    }\n\n   return (\n    <Section>\n      {isLoading ? (\n        <div>Loading...</div>\n      ) : (\n        <List>\n          {cast.map(({ id, profile_path, name, character }) => {\n            const imageSRC = profile_path\n              ? IMAGEURL + profile_path\n              : IMAGEURL;\n            return (\n              <ListItem key={id}>\n                <img src={imageSRC} alt={name} width={200} height={300} />\n                <div>\n                  <p>\n                    <span>{name}</span>\n                  </p>\n                  {character ? (\n                    <p>\n                      <b>Character:</b>\n                      <span> {character}</span>\n                    </p>\n                  ) : (\n                    <p>\n                      <b>Character:</b>\n                      <span> Unknown</span>\n                    </p>\n                  )}\n                </div>\n              </ListItem>\n            );\n          })}\n        </List>\n      )}\n      {!cast.length && (\n        <p>There is no information about the cast of this film yet. Sorry...</p>\n      )}\n    </Section>\n  );\n};\n\nexport default Cast;","import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst KEY = 'a6399bd390c157c90a11cb622fa14388';\n\nexport const getTrendingMovies = async() => {\n    const { data } = await axios.get(`/trending/all/day?api_key=${KEY}`)\n    return data.results;\n}\n\nexport const movieById = async movieId => {\n    const res = await axios.get(`/movie/${movieId}?api_key=${KEY}`)\nreturn res.data\n}\n\nexport const credits = async movieId => {\n    const {data} = await axios.get(`/movie/${movieId}/credits?api_key=${KEY}&language=en-US`)\nreturn data.cast\n}\n\nexport const getReviews = async movieId => {\n    const {data} = await axios.get(`/movie/${movieId}/reviews?api_key=${KEY}`)\nreturn data.results\n} \n\nexport const moviesByName = async query => {\n  const { data } = await axios.get(`/search/movie?api_key=${KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n  return data;\n};"],"names":["ListItem","styled","Section","List","IMAGEURL","movieId","useParams","useState","isLoading","setIsLoading","cast","setCast","useEffect","fetchData","credits","map","id","profile_path","name","character","imageSRC","src","alt","width","height","length","axios","KEY","getTrendingMovies","data","results","movieById","res","getReviews","moviesByName","query"],"sourceRoot":""}